{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "starPrefab",
    "default",
    "type",
    "Prefab",
    "maxStarDuration",
    "minStarDuration",
    "ground",
    "Node",
    "player",
    "scoreDisplay",
    "Label",
    "scoreAudio",
    "url",
    "AudioClip",
    "onLoad",
    "groundY",
    "y",
    "height",
    "timer",
    "starDuration",
    "spawnNewStar",
    "score",
    "newStar",
    "instantiate",
    "node",
    "addChild",
    "setPosition",
    "getNewStarPosition",
    "getComponent",
    "game",
    "random0To1",
    "randX",
    "randY",
    "jumpHeight",
    "maxX",
    "width",
    "randomMinus1To1",
    "p",
    "gainScore",
    "string",
    "toString",
    "audioEngine",
    "playEffect",
    "update",
    "dt",
    "gameover",
    "stopAllActions",
    "director",
    "loadScene"
  ],
  "mappings": ";;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;AAmBRE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SAnBN;AAuBRC,oBAAY;AACRV,qBAAS,IADD;AAERW,iBAAKjB,GAAGkB;AAFA;AAvBJ,KAHP;;AAgCL;AACAC,YAAQ,kBAAY;AAChB,aAAKC,OAAL,GAAe,KAAKT,MAAL,CAAYU,CAAZ,GAAgB,KAAKV,MAAL,CAAYW,MAAZ,GAAmB,CAAlD;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,YAAL;AACA,aAAKC,KAAL,GAAa,CAAb;AACH,KAvCI;;AAyCLD,kBAAc,wBAAW;AACrB,YAAIE,UAAU3B,GAAG4B,WAAH,CAAe,KAAKvB,UAApB,CAAd;AACA,aAAKwB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;;AAEA;AACA,aAAKV,YAAL,GAAoB,KAAKd,eAAL,GAAuBV,GAAGmC,UAAH,MAAmB,KAAK1B,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,aAAKa,KAAL,GAAa,CAAb;AACH,KAlDI;;AAoDLS,wBAAoB,8BAAW;AAC3B,YAAII,QAAQ,CAAZ;AACA,YAAIC,QAAQ,KAAKjB,OAAL,GAAepB,GAAGmC,UAAH,KAAkB,KAAKtB,MAAL,CAAYoB,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAA7B;AACAJ,gBAAQpC,GAAGyC,eAAH,KAAuBF,IAA/B;AACA,eAAOvC,GAAG0C,CAAH,CAAKN,KAAL,EAAYC,KAAZ,CAAP;AACH,KA1DI;AA2DLM,eAAW,qBAAW;AAClB,aAAKjB,KAAL,IAAc,CAAd;AACA,aAAKZ,YAAL,CAAkB8B,MAAlB,GAA2B,YAAY,KAAKlB,KAAL,CAAWmB,QAAX,EAAvC;AACA7C,WAAG8C,WAAH,CAAeC,UAAf,CAA0B,KAAK/B,UAA/B,EAA2C,KAA3C;AACH,KA/DI;AAgEL;AACAgC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAI,KAAK1B,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,iBAAK0B,QAAL;AACA;AACH;AACD,aAAK3B,KAAL,IAAc0B,EAAd;AACH,KAvEI;AAwELC,cAAU,oBAAW;AACjB,aAAKrC,MAAL,CAAYsC,cAAZ;AACAnD,WAAGoD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH;AA3EI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.groundY = this.ground.y + this.ground.height/2;\n        this.timer = 0;\n        this.starDuration = 0;\n        this.spawnNewStar();\n        this.score = 0;\n    },\n\n    spawnNewStar: function() {\n        var newStar = cc.instantiate(this.starPrefab);\n        this.node.addChild(newStar);\n        newStar.setPosition(this.getNewStarPosition());\n        newStar.getComponent('Star').game = this;\n        \n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n    \n    getNewStarPosition: function() {\n        var randX = 0;\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n        var maxX = this.node.width / 2;\n        randX = cc.randomMinus1To1() * maxX;\n        return cc.p(randX, randY);\n    },\n    gainScore: function() {\n        this.score += 1;\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if (this.timer > this.starDuration) {\n            this.gameover();\n            return;\n        }\n        this.timer += dt;\n    },\n    gameover: function() {\n        this.player.stopAllActions();\n        cc.director.loadScene('game');\n    }\n});\n"
  ]
}